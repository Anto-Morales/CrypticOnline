// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int       @id @default(autoincrement())
  nombres         String
  apellidoPaterno String
  apellidoMaterno String
  email           String    @unique
  password        String
  telefono        String
  calle           String
  numero          String
  colonia         String
  ciudad          String
  estado          String
  codigoPostal    String
  referencias     String
  wallet          String?
  role            String    @default("customer")
  isActive        Boolean   @default(true)
  orders          Order[]
  products        Product[]
  createdAt       DateTime  @default(now())
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  price       Float
  imageUrl    String
  user        User        @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime    @default(now())
  orderItems  OrderItem[]
}

model Order {
  id         Int         @id @default(autoincrement())
  userId     Int
  user       User        @relation(fields: [userId], references: [id])
  status     String
  txHash     String?
  createdAt  DateTime    @default(now())
  orderItems OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int     @default(1)
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@unique([orderId, productId])
}
